{% extends 'base.html.twig' %}

{% block title %}Créer une sortie{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">

{% endblock %}

{% block body %}
    <div class="container mt-4" style="margin-bottom: 100px">
        <h1 class="text-center">Créer une sortie</h1>

        {{ form_start(form, {'attr': {'data-turbo': 'false', 'class': 'form-horizontal'}}) }}

        <div class="row">
            <div class="col-md-6">
                <div class="form-group mb-3">
                    {{ form_label(form.nom, 'Nom de la sortie', {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.nom, {'attr': {'class': 'form-control'}}) }}
                    <div class="text-danger">{{ form_errors(form.nom) }}</div>
                </div>

                <div class="form-group mb-3">
                    {{ form_label(form.dateHeureDebut, 'Date et heure de la sortie', {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.dateHeureDebut, {'attr': {'class': 'form-control datetimepicker'}}) }}
                    <div class="text-danger">{{ form_errors(form.dateHeureDebut) }}</div>
                </div>

                <div class="form-group mb-3">
                    {{ form_label(form.dateLimiteInscription, 'Date limite d\'inscription', {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.dateLimiteInscription, {'attr': {'class': 'form-control datepicker'}}) }}
                    <div class="text-danger">{{ form_errors(form.dateLimiteInscription) }}</div>
                </div>

                <div class="form-group mb-3">
                    {{ form_label(form.nbInscriptionMax, 'Nombre de places', {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.nbInscriptionMax, {'attr': {'class': 'form-control'}}) }}
                    <div class="text-danger">{{ form_errors(form.nbInscriptionMax) }}</div>
                </div>

                <div class="form-group mb-3">
                    {{ form_label(form.duree, 'Durée (en minutes)', {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.duree, {'attr': {'class': 'form-control'}}) }}
                    <div class="text-danger">{{ form_errors(form.duree) }}</div>
                </div>

                <div class="form-group mb-3">
                    {{ form_label(form.infosSortie, 'Description et infos', {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.infosSortie, {'attr': {'class': 'form-control', 'rows': '4'}}) }}
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label for="ville" class="form-label">Ville</label>
                    <select id="ville" class="form-select">
                        <option value="">Sélectionnez une ville</option>
                        {% for ville in villes %}
                            <option value="{{ ville.id }}">{{ ville.nom }}</option>
                        {% endfor %}
                    </select>
                </div>

                <div class="form-group mb-3">
                    {{ form_label(form.lieu, 'Lieu', {'label_attr': {'class': 'form-label'}}) }}
                    <div class="input-group">
                        {{ form_widget(form.lieu, {'attr': {'class': 'form-control', 'disabled': true}}) }}
                        <button type="button" class="btn btn-outline-secondary" id="addLieuButton" data-bs-toggle="modal" data-bs-target="#addLieuModal">
                            <i class="bi bi-plus-lg"></i> Ajouter un lieu
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-actions mt-4 text-center">
            <button type="submit" name="save" class="btn btn-primary me-2">
                <i class="bi bi-save"></i> Enregistrer
            </button>
            <button type="submit" name="publish" class="btn btn-success me-2">
                <i class="bi bi-upload"></i> Publier
            </button>
            <a href="{{ path('app_sortie') }}" class="btn btn-secondary">
                <i class="bi bi-arrow-left"></i> Retour à la liste
            </a>
        </div>

        {{ form_end(form) }}

        <!-- Modal pour ajouter un lieu -->
        <div class="modal fade" id="addLieuModal" tabindex="-1" aria-labelledby="addLieuModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addLieuModalLabel">Ajouter un nouveau lieu</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="addLieuForm">
                            <div class="mb-3">
                                <label for="lieu_nom" class="form-label">Nom du lieu</label>
                                <input type="text" class="form-control" id="lieu_nom" required>
                            </div>
                            <div class="mb-3">
                                <label for="lieu_rue" class="form-label">Rue</label>
                                <input type="text" class="form-control" id="lieu_rue" required>
                            </div>
                            <div class="mb-3">
                                <label for="lieu_latitude" class="form-label">Latitude</label>
                                <input type="text" class="form-control" id="lieu_latitude" required>
                            </div>
                            <div class="mb-3">
                                <label for="lieu_longitude" class="form-label">Longitude</label>
                                <input type="text" class="form-control" id="lieu_longitude" required>
                            </div>
                            <input type="hidden" id="lieu_ville">
                            <button type="submit" class="btn btn-primary">Ajouter</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <!-- Bootstrap JS (pour le bon fonctionnement des modals) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const villeSelect = document.querySelector('#ville');
            const lieuSelect = document.querySelector('#{{ form.lieu.vars.id }}'); // Sélecteur basé sur l'ID du widget lieu
            const addLieuForm = document.querySelector('#addLieuForm');
            const modal = new bootstrap.Modal(document.getElementById('addLieuModal'));

            villeSelect.addEventListener('change', function () {

                const villeId = villeSelect.value;
                document.getElementById('lieu_ville').value = villeId; // Mise à jour du champ ville dans le formulaire de lieu

                if (villeId) {
                    lieuSelect.disabled = false;

                    // Charger les lieux via Ajax
                    fetch(`/api/lieux/${villeId}`, {
                        method: 'GET',
                        headers: {
                            'Authorization': 'Bearer ' + '{{ sessionId }}',
                            'Content-Type': 'application/json'
                        },
                        credentials: 'same-origin',
                    })
                        .then(response => response.json())
                        .then(data => {
                            lieuSelect.innerHTML = '<option value="">Sélectionnez un lieu</option>';
                            data.forEach(lieu => {
                                const option = document.createElement('option');
                                option.value = lieu.id;
                                option.textContent = lieu.nom;
                                lieuSelect.appendChild(option);
                            });
                        });
                } else {
                    lieuSelect.disabled = true;
                    lieuSelect.innerHTML = '<option value="">Sélectionnez une ville d\'abord</option>';
                }
            });

            addLieuForm.addEventListener('submit', function (e) {
                e.preventDefault();

                const formData = {
                    nom: document.getElementById('lieu_nom').value,
                    rue: document.getElementById('lieu_rue').value,
                    latitude: document.getElementById('lieu_latitude').value,
                    longitude: document.getElementById('lieu_longitude').value,
                    ville: document.getElementById('lieu_ville').value
                };

                fetch('/api/lieux/add', {
                    method: 'POST',
                    headers: {
                        'Authorization': 'Bearer ' + '{{ sessionId }}',
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest',
                    },
                    credentials: 'same-origin',
                    body: JSON.stringify(formData)
                })
                    .then(response => response.json())
                    .then(data => {
                        // Ajouter le nouveau lieu à la liste des lieux
                        const option = document.createElement('option');
                        option.value = data.id;
                        option.textContent = data.nom;
                        lieuSelect.appendChild(option);
                        lieuSelect.value = data.id;

                        // Fermer la modal
                        modal.hide();
                    })
                    .catch(error => console.error('Erreur:', error));
            });
        });
    </script>
{% endblock %}