{% extends 'base.html.twig' %}

{% block title %}Créer une sortie{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
{% endblock %}

{% block body %}
    <h1>Ajouter un lieu</h1>

    <div class="container mt-4" style="margin-bottom: 100px">
        <div class="row">
            <div class="col-6">
                <div class="form-group mb-3">
                    <div >Ville</div>
                    <div class="form-control">{{ ville.nom }}</div>
                </div>
                {{ form_start(form, {'attr': {'data-turbo': 'false', 'class': 'form-horizontal'}}) }}
                <input type="hidden"   id="ville" name="ville" value={{ ville.nom }}>
                <div class="form-group mb-3" hidden="hidden">
                    {{ form_label(form.ville, 'Ville', {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.ville, {'attr': {'class': 'form-control'}}) }}
                    <div class="text-danger">{{ form_errors(form.ville) }}</div>
                </div>
                <div class="form-group mb-3">
                    {{ form_label(form.nom, 'Nom du lieu', {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.nom, {'attr': {'class': 'form-control'}}) }}
                    <div class="text-danger">{{ form_errors(form.nom) }}</div>
                </div>

                <div class="form-group mb-3">
                    {{ form_label(form.rue, 'Rue', {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.rue, {'attr': {'class': 'form-control datetimepicker'}}) }}
                    <div class="text-danger">{{ form_errors(form.rue) }}</div>
                </div>

                <div class="form-group mb-3">
                    {{ form_label(form.latitude, 'Latitude', {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.latitude, {'attr': {'class': 'form-control datepicker'}}) }}
                    <div class="text-danger">{{ form_errors(form.latitude) }}</div>
                </div>

                <div class="form-group mb-3">
                    {{ form_label(form.longitude, 'Longitude', {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.longitude, {'attr': {'class': 'form-control'}}) }}
                    <div class="text-danger">{{ form_errors(form.longitude) }}</div>
                </div>
                <button type="submit" name="save" class="btn btn-primary me-2">
                    <i class="bi bi-save"></i> Ajouter
                </button>
                {{ form_end(form) }}
            </div>

            <!-- Carte de localisation (col-md-6 pour 50% de l'écran) -->
            <div class="col-6" style="background-color: rgb(204,204,204);border-radius: 5px">
                <div class="card-body">
                    <h2 class="text-primary">Localisation</h2>
                    <div id="map" style="height: 400px; width: 100%;" class="border rounded shadow-sm"></div>
                </div>
            </div>
        </div>
    </div>




{% endblock %}

{% block javascripts %}
    {{ parent() }}
{#    <!-- Bootstrap JS (pour le bon fonctionnement des modals) -->#}
{#    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>#}

    <!-- Inclure Leaflet CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css" />

    <!-- Inclure Leaflet JS -->
    <script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const villeSelect = document.querySelector('#ville');
            const rueInput = document.getElementById('lieu_rue');
            const errorMessageDiv = document.createElement('div'); // Création d'un div pour les messages d'erreur
            errorMessageDiv.style.color = 'red';
            errorMessageDiv.style.marginTop = '10px';
            rueInput.parentElement.appendChild(errorMessageDiv); // Ajout du div sous le champ de la rue

            const showError = (message) => {
                errorMessageDiv.textContent = message;
            };

            const clearError = () => {
                errorMessageDiv.textContent = '';
            };

            const ville = villeSelect.value;
            let q = `https://nominatim.openstreetmap.org/search?addressdetails=1&q=${ville}&format=jsonv2&limit=1`;

            fetch(q, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                },
                credentials: 'same-origin',
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Erreur lors de la récupération des coordonnées.'); // Lancer une erreur si la requête échoue
                    }
                    return response.json();
                })
                .then(data => {
                    clearError(); // Effacer le message d'erreur s'il existe
                    if (data.length > 0 && data[0].lat && data[0].lon) {
                        let latitude = data[0].lat;
                        let longitude = data[0].lon;

                        // Initialisation de la carte
                        const map = L.map('map').setView([latitude, longitude], 13);

                        // Ajouter une couche de tuiles (carte de fond)
                        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                            maxZoom: 19,
                            attribution: '© OpenStreetMap'
                        }).addTo(map);

                        // Ajouter un marqueur aux coordonnées de la sortie
                        L.marker([latitude, longitude]).addTo(map).openPopup();
                    } else {
                        showError('Impossible de récupérer les coordonnées pour cette ville.');
                    }
                })
                .catch(error => {
                    console.error(error);
                    showError('Une erreur est survenue lors de la récupération des coordonnées.');
                });

            rueInput.addEventListener('change', function () {
                const rue = rueInput.value;
                const ville = villeSelect.value;
                let query = `https://nominatim.openstreetmap.org/search?addressdetails=1&q=${encodeURIComponent(rue)}+${encodeURIComponent(ville)}&format=jsonv2&limit=1`;

                fetch(query, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    credentials: 'same-origin',
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Erreur lors de la récupération des coordonnées pour la rue.');
                        }
                        return response.json();
                    })
                    .then(data => {
                        clearError(); // Effacer le message d'erreur s'il existe
                        if (data.length > 0 && data[0].lat && data[0].lon) {
                            let latitude = data[0].lat;
                            let longitude = data[0].lon;

                            const latInput = document.getElementById('lieu_latitude');
                            const lonInput = document.getElementById('lieu_longitude');
                            latInput.value = latitude;
                            lonInput.value = longitude;
                        } else {
                            showError('Impossible de récupérer les coordonnées pour cette rue.');
                        }
                    })
                    .catch(error => {
                        console.error(error);
                        showError('Une erreur est survenue lors de la récupération des coordonnées.');
                    });
            });
        });
    </script>
{% endblock %}